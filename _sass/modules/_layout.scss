.container {
  @include container;
}

.container-grid {
  @include containerGrid;
  &-top {
    @extend .container-grid;
    align-items: flex-start;
  }
  &-center {
    @extend .container-grid;
    align-items: center;
  }
  $posSizes: xs, s, m, l;

  @each $size in $posSizes {
    @for $i from 1 through 12 {
      @for $j from 2 through 13 {
        @if ($size == xs) {
          @if ($i < $j) {
            .pos-#{$i}-#{$j} {
              grid-column-start: $i;
              grid-column-end: $j;
            }
          }
        } @else {
          @if ($i < $j) {
            .pos-#{$size}-#{$i}-#{$j} {
              grid-column-start: $i;
              grid-column-end: $j;
            }
          }
        }
      }
    }
  }
}

.content {
  &-wrap {
    @media only screen and (min-width: 60em) {
      order: -1;
    }
  }
  &-sidebars {
    display: grid;
    gap: 1.5rem;
    margin-bottom: 3rem;
    @media only screen and (min-width: 38em) {
      grid-template-columns: repeat(2, 1fr);
    }
    @media only screen and (min-width: 60em) {
      grid-template-columns: 1fr;
      position: sticky;
      top: 6rem;
      padding-bottom: 3rem;
      margin-bottom: 0;
    }
  }
}



/* - - - - - - - - - - Displays - - - - - - - - - - */

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.hidden {
  display: none;
}